"use strict";(self.webpackChunkunofficial_adb_book=self.webpackChunkunofficial_adb_book||[]).push([[604],{7942:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var a=n(959);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),u=r,k=d["".concat(s,".").concat(u)]||d[u]||m[u]||o;return n?a.createElement(k,i(i({ref:t},c),{},{components:n})):a.createElement(k,i({ref:t},c))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1600:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(5882),r=(n(959),n(7942));const o={sidebar_position:1},i=void 0,l={unversionedId:"basics/architecture",id:"basics/architecture",title:"architecture",description:"\x3c!--",source:"@site/docs/basics/architecture.md",sourceDirName:"basics",slug:"/basics/architecture",permalink:"/unofficial-adb-book/basics/architecture",draft:!1,editUrl:"https://github.com/yume-chan/unofficial-adb-book/edit/main/docs/basics/architecture.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"basics",previous:{title:"Introduction",permalink:"/unofficial-adb-book/"},next:{title:"Packet Format",permalink:"/unofficial-adb-book/basics/packet"}},s={},p=[{value:"Native ADB",id:"native-adb",level:2},{value:"Client",id:"client",level:3},{value:"Server",id:"server",level:3},{value:"Daemon",id:"daemon",level:3},{value:"Protocol",id:"protocol",level:3},{value:"Web ADB",id:"web-adb",level:2},{value:"Core",id:"core",level:3},{value:"Backend",id:"backend",level:3},{value:"Comparison",id:"comparison",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"architecture"},"Architecture"),(0,r.kt)("p",null,"This part describes the architecture of native ADB and Web ADB, and why there are designed in this way."),(0,r.kt)("h2",{id:"native-adb"},"Native ADB"),(0,r.kt)("p",null,"Native ADB has three components:"),(0,r.kt)("div",{className:"flow-chart"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                               \u2502  \u2502              \u2502\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502  \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\n\u2502 \u2502           \u251c\u2500\u2500\u2500\u2500\u2500\u25ba        \u251c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u25ba          \u2502 \u2502\n\u2502 \u2502 Client A  \u2502     \u2502        \u2502  \u2502  \u2502 \u2502 Daemon A \u2502 \u2502\n\u2502 \u2502           \u25c4\u2500\u2500\u2500\u2500\u2500\u2524        \u25c4\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2524          \u2502 \u2502\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2502        \u2502  \u2502  \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\n\u2502                   \u2502        \u2502  \u2502  \u2502              \u2502\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u2502 Server \u2502  \u2502  \u2502   Device A   \u2502\n\u2502 \u2502           \u251c\u2500\u2500\u2500\u2500\u2500\u25ba        \u2502  \u2502  \u2502              \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \u2502 Client B  \u2502     \u2502        \u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502              \u2502\n\u2502 \u2502           \u25c4\u2500\u2500\u2500\u2500\u2500\u2524        \u2502  \u2502                    \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518     \u2502        \u251c\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u25ba          \u2502 \u2502\n\u2502                   \u2502        \u2502  \u2502                    \u2502 \u2502 Daemon B \u2502 \u2502\n\u2502                   \u2502        \u25c4\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2524          \u2502 \u2502\n\u2502  Computer A       \u2514\u2500\u2500\u25b2\u2500\u2500\u252c\u2500\u2500\u2518  \u2502                    \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\n\u2502                      \u2502  \u2502     \u2502                    \u2502              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2518                    \u2502   Device B   \u2502\n                       \u2502  \u2502                          \u2502              \u2502\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510      \u2502  \u2502                          \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u2502               \u2502      \u2502  \u2502\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502      \u2502  \u2502\n\u2502 \u2502           \u251c\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502\n\u2502 \u2502 Client C  \u2502 \u2502         \u2502\n\u2502 \u2502           \u25c4\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\n\u2502               \u2502\n\u2502  Computer B   \u2502\n\u2502               \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"))),(0,r.kt)("h3",{id:"client"},"Client"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Client")," receives command line inputs, generates request packets, sends them to ",(0,r.kt)("strong",{parentName:"p"},"server")," over TCP."),(0,r.kt)("p",null,"Because there can be multiple devices connected to the computer, ",(0,r.kt)("strong",{parentName:"p"},"clients"),' add a "host prefix" to specify the device.'),(0,r.kt)("h3",{id:"server"},"Server"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Server")," is in the same binary as ",(0,r.kt)("strong",{parentName:"p"},"client"),", but runs in a separate process with different command line arguments. Usually ",(0,r.kt)("strong",{parentName:"p"},"servers")," are spawned by ",(0,r.kt)("strong",{parentName:"p"},"clients")," when they cannot find one on localhost. To manually spawn a ",(0,r.kt)("strong",{parentName:"p"},"server"),", use ",(0,r.kt)("inlineCode",{parentName:"p"},"adb server nodaemon"),". By default, it binds to ",(0,r.kt)("inlineCode",{parentName:"p"},"localhost:5037"),"."),(0,r.kt)("p",null,"It is also possible to use SSH tunnel to let ",(0,r.kt)("strong",{parentName:"p"},"clients")," connect to a ",(0,r.kt)("strong",{parentName:"p"},"server")," running on a remote machine."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Servers")," are responsible for discovering and connecting to devices. They also handle packets from ",(0,r.kt)("strong",{parentName:"p"},"clients"),"."),(0,r.kt)("p",null,"Some packets should be processed by ",(0,r.kt)("strong",{parentName:"p"},"server")," itself (for example ",(0,r.kt)("inlineCode",{parentName:"p"},"adb devices"),"), it generates response packets and sends them to ",(0,r.kt)("strong",{parentName:"p"},"client"),"."),(0,r.kt)("p",null,"Others need to be forwarded to ",(0,r.kt)("strong",{parentName:"p"},"daemons")," (for example ",(0,r.kt)("inlineCode",{parentName:"p"},"adb shell"),"). It finds the specified ",(0,r.kt)("strong",{parentName:"p"},"daemon"),' using the "host prefix", rewrites the packet to remove "host prefix", and finally sends it to the ',(0,r.kt)("strong",{parentName:"p"},"daemon")," over USB (libusb/WinUSB) or TCP."),(0,r.kt)("p",null,"Because USB APIs only allow one connection to a device simultaneously, to use multiple CLI applications with one device, the ",(0,r.kt)("strong",{parentName:"p"},"server")," is required to multiplex the packets."),(0,r.kt)("h3",{id:"daemon"},"Daemon"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Daemon")," runs on Android devices and emulators, it receives packets, handles them, and generates responses."),(0,r.kt)("p",null,"Historically, because most device only has one USB port, ",(0,r.kt)("strong",{parentName:"p"},"daemons")," can only handle one connection. But even after ADB over Wi-Fi has been added, one ",(0,r.kt)("strong",{parentName:"p"},"daemon")," can still handle one TCP connection."),(0,r.kt)("h3",{id:"protocol"},"Protocol"),(0,r.kt)("p",null,"All packets between ",(0,r.kt)("strong",{parentName:"p"},"client-server")," and ",(0,r.kt)("strong",{parentName:"p"},"server-daemon")," are in the ADB packet format, but as mentioned before, ",(0,r.kt)("strong",{parentName:"p"},"client-server"),' packets contain an extra "host prefix". ADB packet format will be described in ',(0,r.kt)("a",{parentName:"p",href:"/unofficial-adb-book/basics/packet"},"packet"),' chapter, while "host prefix" will be described in ',(0,r.kt)("a",{parentName:"p",href:"/unofficial-adb-book/basics/stream"},"stream")," chapter."),(0,r.kt)("h2",{id:"web-adb"},"Web ADB"),(0,r.kt)("p",null,"Web ADB reuses native ADB daemons, but there is no ",(0,r.kt)("strong",{parentName:"p"},"client"),"/",(0,r.kt)("strong",{parentName:"p"},"server"),": One application, one connection, to one device."),(0,r.kt)("div",{className:"flow-chart"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                  \u2502  \u2502              \u2502\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502  \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\n\u2502 \u2502          \u251c\u2500\u2500\u2500\u2500\u25ba             \u251c\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u25ba          \u2502 \u2502\n\u2502 \u2502  Core A  \u2502    \u2502  Backend A  \u2502  \u2502  \u2502 \u2502 Daemon A \u2502 \u2502\n\u2502 \u2502          \u25c4\u2500\u2500\u2500\u2500\u2524             \u25c4\u2500\u2500\u253c\u2500\u2500\u253c\u2500\u2524          \u2502 \u2502\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502  \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\n\u2502                                  \u2502  \u2502              \u2502\n\u2502                                  \u2502  \u2502   Device A   \u2502\n\u2502                                  \u2502  \u2502              \u2502  \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                                  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502              \u2502\n\u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502                    \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502\n\u2502 \u2502          \u251c\u2500\u2500\u2500\u2500\u25ba             \u251c\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u25ba          \u2502 \u2502\n\u2502 \u2502  Core B  \u2502    \u2502  Backend B  \u2502  \u2502                    \u2502 \u2502 Daemon B \u2502 \u2502\n\u2502 \u2502          \u25c4\u2500\u2500\u2500\u2500\u2524             \u25c4\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2524          \u2502 \u2502\n\u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502                    \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502\n\u2502                                  \u2502                    \u2502              \u2502\n\u2502        JavaScript Runtime        \u2502                    \u2502   Device B   \u2502\n\u2502                                  \u2502                    \u2502              \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518                    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"))),(0,r.kt)("h3",{id:"core"},"Core"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Core")," is the ",(0,r.kt)("inlineCode",{parentName:"p"},"@yume-chan/adb"),' package. It generates data in ADB protocol, without "host prefix" (not needed because packets are directly sent to ',(0,r.kt)("strong",{parentName:"p"},"daemons")," via a ",(0,r.kt)("strong",{parentName:"p"},"backend"),")."),(0,r.kt)("h3",{id:"backend"},"Backend"),(0,r.kt)("p",null,"One ",(0,r.kt)("strong",{parentName:"p"},"backend")," defines one method to transmit and receive ADB packets. There are already multiple backend implementations, for example ",(0,r.kt)("inlineCode",{parentName:"p"},"@yume-chan/adb-backend-usb")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"@yume-chan/adb-backend-ws"),"."),(0,r.kt)("p",null,"One ",(0,r.kt)("strong",{parentName:"p"},"core")," instance requires one ",(0,r.kt)("strong",{parentName:"p"},"backend")," instance, so it only connects to one device."),(0,r.kt)("p",null,"Because JavaScript runtimes are generally more isolated, sharing devices between multiple application is not a consideration. However, it is still very easy to share a ",(0,r.kt)("strong",{parentName:"p"},"core")," instance within a single application, and if a runtime has more privileges, sharing ",(0,r.kt)("strong",{parentName:"p"},"core")," using a custom protocol is also not impossible."),(0,r.kt)("p",null,"Having Backend as an independent part also makes it extremely easy to port to other runtimes (Web Browsers, Node.js, Electron, etc.)."),(0,r.kt)("p",null,"Possible Backend implementations:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Web Browsers",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"WebUSB API (USB)"),(0,r.kt)("li",{parentName:"ul"},"WebSocket + Custom WebSockify forwarder (TCP)"))),(0,r.kt)("li",{parentName:"ul"},"Node.js/Electron",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Any USB libraries (USB)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"net")," module (TCP)"),(0,r.kt)("li",{parentName:"ul"},"WebSocket + Custom WebSockify forwarder (TCP)")))),(0,r.kt)("h2",{id:"comparison"},"Comparison"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null}),(0,r.kt)("th",{parentName:"tr",align:null},"Native ADB"),(0,r.kt)("th",{parentName:"tr",align:null},"Web ADB"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Who implements all ADB commands?"),(0,r.kt)("td",{parentName:"tr",align:null},"Client"),(0,r.kt)("td",{parentName:"tr",align:null},"Core")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Who directly talks to device?"),(0,r.kt)("td",{parentName:"tr",align:null},"Server"),(0,r.kt)("td",{parentName:"tr",align:null},"Backend")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"How does them talk internally?"),(0,r.kt)("td",{parentName:"tr",align:null},"TCP Socket (variation of ADB protocol)"),(0,r.kt)("td",{parentName:"tr",align:null},"JavaScript API calls")))))}d.isMDXComponent=!0}}]);